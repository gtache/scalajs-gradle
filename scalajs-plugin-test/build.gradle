import org.scalajs.jsenv.nodejs.*
import com.github.gtache.Scalajsld$

group 'com.github.gtache'
version '1.0-SNAPSHOT'

apply plugin: 'scalajs-plugin'
apply plugin: 'idea'

sourceCompatibility = 1.8

buildscript {
    String scalaVersion = project.hasProperty('scalaVersion') ? project.property('scalaVersion') : '2.12'
    String scalaJSVersion = project.hasProperty('scalaJSVersion') ? project.property('scalaJSVersion') : '0.6.15'
    String scalaJSM = scalaJSVersion.substring(0,3)

    String pluginVersion = '0.4.0'
    String pluginFullVersion = 'sjs'+scalaJSM+'_'+scalaVersion+'_'+pluginVersion
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.gtache:scalajs-plugin:'+pluginFullVersion
    }
}

configurations {
    scalaTestCompile
}

//Duplication because buildscript{} and the rest of the build file don't share variables
String scalaVersion = project.hasProperty('scalaVersion') ? project.property('scalaVersion') : '2.12'
String subVersion = project.hasProperty('subVersion') ? project.property('subVersion') : '1'
String scalaFullVersion = scalaVersion + '.' + subVersion
String scalaJSVersion = project.hasProperty('scalaJSVersion') ? project.property('scalaJSVersion') : '0.6.15'
String scalaJSM = scalaJSVersion.substring(0,3)
String scalaJSV = scalaJSM+'_'+scalaVersion

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'com.lihaoyi', name: 'scalatags_sjs'+scalaJSV, version: '0.6.3'
    testCompile group: 'org.scala-js', name: 'scalajs-junit-test-runtime_'+scalaVersion, version: scalaJSVersion
    testCompile group: 'org.scalactic', name: 'scalactic_sjs'+scalaJSV, version: '3.0.1'
    testCompile group: 'org.scalatest', name: 'scalatest_sjs'+scalaJSV, version: '3.0.1'
    testCompile group: 'org.scalacheck', name: 'scalacheck_sjs'+scalaJSV, version: '1.13.4'
    testCompile group: 'com.lihaoyi', name: 'utest_sjs'+scalaJSV, version: '0.4.5'
    testCompile group: 'io.monix', name: 'minitest_sjs'+scalaJSV, version: '0.27'
    testCompile group: 'com.github.japgolly.nyaya', name: 'nyaya-prop_sjs'+scalaJSV, version: '0.8.1'
    testCompile group: 'com.github.japgolly.nyaya', name: 'nyaya-gen_sjs'+scalaJSV, version: '0.8.1'
    testCompile group: 'com.github.japgolly.nyaya', name: 'nyaya-test_sjs'+scalaJSV, version: '0.8.1'
    testCompile group: 'com.github.scalaprops', name: 'scalaprops_sjs'+scalaJSV, version: '0.4.1'
    testCompile group: 'com.github.scalaprops', name: 'scalaprops-scalazlaws_sjs'+scalaJSV, version: '0.4.1'
    scalaTestCompile group: 'org.scala-js', name: 'scalajs-junit-test-plugin_'+scalaFullVersion, version: scalaJSVersion
}

//Necessary to make JUnit work
tasks.findByPath('compileTestScala').doFirst {
    scalaCompileOptions.additionalParameters = scalaCompileOptions.additionalParameters +
            ["-Xplugin:" + project.configurations.scalaTestCompile.findAll {
                it.absolutePath.contains("junit-test-plugin")
            }.get(0).absolutePath]
}


ext {
    testFrameworks = ["utest.runner.Framework"]
    testFrameworks += "minitest.runner.Framework"
    testFrameworks += "org.scalacheck.ScalaCheckFramework"
    testFrameworks += "scalaprops.ScalapropsFramework"
    testFrameworks += "scalaprops.ScalapropsFramework"
    linkLogLevel = "Debug"
    testLogLevel = "Debug"

    //You can configure a custom JSEnv (selenium,...), don't forget to import the classes
    //jsEnv = new NodeJSEnv("node", Seq$.MODULE$.empty(), Map$.MODULE$.empty())
    //jsEnv.loadLibs(...)
    //jsEnv.withSourceMap(...)

    //You can configure custom Semantics
    //semantics = Semantics.Defaults().withProductionMode(true).with...

    //You can configure optimizer options
    //oOptions = Scalajsld$.MODULE$.defaultOptions().withParallel(false)...
}

defaultTasks += 'FastOptJS'
